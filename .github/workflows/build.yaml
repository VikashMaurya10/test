name: CI - Lint & Build with Bun

on:
  pull_request:
    branches: [master]

jobs:
  lint-and-build:
    runs-on: ubuntu-latest
    env:
      API_URL: ${{ secrets.API_URL }}
      NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXT_AUTH_SECRET }}
      NEXTAUTH_URL: ${{ secrets.NEXT_AUTH_APP_URL }}
      REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install Dependencies
        run: bun install

      - name: Install ESLint
        run: bun add -d eslint

      - name: Run ESLint and Report via Reviewdog
        run: |
          bunx eslint . --format json > eslint-report.json || true
          curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b . latest
          ./reviewdog -f=eslint -name="eslint" -reporter=github-pr-review < eslint-report.json
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Required Environment Variables
        id: envcheck
        run: |
          echo "Checking required environment variables..."
          failed=0
          for var in API_URL NEXTAUTH_SECRET NEXTAUTH_URL NEXT_PUBLIC_APP_URL; do
            if [ -z "${!var}" ]; then
              echo "❌ Missing $var"
              failed=1
            else
              echo "✅ $var is set"
            fi
          done
          echo "env_status=$failed" >> $GITHUB_OUTPUT

      - name: Build Project
        id: build
        if: steps.envcheck.outputs.env_status == '0'
        run: |
          bun run build 2>&1 | tee build.log
        continue-on-error: true

      - name: Upload Build Log to PR Summary (if failed)
        if: failure() && steps.build.outcome == 'failure'
        run: |
          if [ -f build.log ]; then
            echo "### ❌ Build Failed" >> $GITHUB_STEP_SUMMARY
            echo '```log' >> $GITHUB_STEP_SUMMARY
            tail -n 50 build.log >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "### ❌ Build failed but no log generated." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Final Status Check
        if: always()
        run: |
          if [[ "${{ steps.envcheck.outputs.env_status }}" == "1" ]]; then
            echo "❌ Missing required environment variables"
            exit 1
          fi

          if [[ "${{ steps.build.outcome }}" == "failure" ]]; then
            echo "❌ Build failed"
            exit 1
          fi

          echo "✅ All checks passed"

      - name: Comment on PR if all checks passed
        if: success()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            if (pr) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: "✅ All setup completed. Ready to deploy on server."
              });
            }
            
